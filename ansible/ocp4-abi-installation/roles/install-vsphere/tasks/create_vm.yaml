---
# https://github.com/RedHatOfficial/ocp4-vsphere-upi-automation/blob/master/roles/vsphere_vm/tasks/static-iso.yml#L89
# https://github.com/sa-ne/openshift4-vmware-upi/blob/514ca0174c840c8ad664d96cefe3f8fbb582d7db/roles/vmware/tasks/vms-cluster-placement.yaml#L6
# This is not idempotent! It fails with error:
#   "op: reconfig"
#   "msg: A specified parameter was not correct: spec.cpuAllocation"
- name: command
  shell:
    cmd: who;id;cat /etc/subuid; cat /etc/subgid

- name: Remove previous agent ISO to vSphere datastore
  community.vmware.vsphere_file:
    hostname: "{{ vsphere.hostname }}"
    username: "{{ vsphere.username }}"
    password: "{{ vsphere.password }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    datastore: "{{ vsphere.datastore_name }}"
    path: "{{ vsphere.datastore_iso_folder}}/{{ item }}"
    state: absent
  loop: "{{ agent_iso_name if agent_iso_name is iterable and agent_iso_name is not string else lookup('ansible.builtin.vars', 'agent_iso_name', wantlist=True) }}"


- name: Create a virtual machine
  community.vmware.vmware_guest:
    folder: "{{ vsphere.vm_folder }}"
    hostname: "{{ vsphere.hostname }}"
    username: "{{ vsphere.username }}"
    password: "{{ vsphere.password }}"
    cluster: "{{ vsphere.cluster_name }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    name: "{{ __vm['hostname'] }}"
    state: poweredon
    guest_id: rhel8_64Guest
    validate_certs: false
    advanced_settings:
    - key: disk.EnableUUID
      value: 'TRUE'
    - key: stealclock.enable
      value: 'TRUE'
    disk: "{{ __vm['disks'] }}"
    hardware:
      memory_mb: "{{ __vm['ram'] }}"
      memory_reservation_lock: true
      hotadd_memory: false
      num_cpus: "{{ __vm['cpu'] }}"
      hotadd_cpu: false
      hotremove_cpu: false
      version: "{{ vsphere.hwversion }}"
      boot_firmware: "efi"
    cdrom:
      - controller_number: 0
        unit_number: 0
        type: iso
        iso_path: "[{{ vsphere.datastore_name }}] {{ vsphere.datastore_iso_folder }}/{{ agent_iso_name }}"
        state: present
    networks:
    - name: "{{ vsphere.network_name }}"
      type: static
      start_connected: true
  loop: "{{ node_definition }}"
  loop_control:
    loop_var: __vm
  async: 1000
  poll: 0
  register: vm_sleeper

- name: Check on an async create vm task
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  register: vm_creation_job_result
  until: vm_creation_job_result.finished
  retries: 200
  delay: 10
  loop: "{{ vm_sleeper.results }}"

- name: Set the state of a virtual machine to poweroff
  community.vmware.vmware_guest_powerstate:
    hostname: "{{ vsphere.hostname }}"
    username: "{{ vsphere.username }}"
    password: "{{ vsphere.password }}"
    name: "{{ __vm['hostname'] }}"
    state: powered-off
    validate_certs: false
  loop: "{{ node_definition }}"
  loop_control:
    loop_var: __vm
  async: 1000
  poll: 0
  register: vm_poweroff_sleeper

- name: Check on an async poweroff task
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  register: vm_poweroff_job_result
  until: vm_poweroff_job_result.finished
  retries: 200
  delay: 10
  loop: "{{ vm_poweroff_sleeper.results }}"

- name: Set MAC addresses
  ansible.builtin.set_fact:
    "{{ item['instance']['hw_name'] | split('.') | first }}_mac": "{{ item['instance']['hw_eth0']['macaddress'] }}"
  loop: "{{ vm_creation_job_result['results'] }}"
...
